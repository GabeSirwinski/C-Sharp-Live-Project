Details.cshtml:

 <!-- Parts Card Section visible when screen size is bigger-->
        <div class="card mr-4 d-none d-md-block" id="cardss">
                <!-- when screen size is med or bigger this will display. It is otherwise hidden-->
            <div class="card-header" id="head">
                    <b>Parts</b>
            </div>
                <ul class="list-group list-group-flush text-black-50">
                    @{var part = new TheatreCMS.Enum.PositionEnum();}
                    @{List<TheatreCMS.Models.Part> parts = new List<TheatreCMS.Models.Part>();}
                    @foreach (int position in ViewBag.Positions)
                    {
                        parts.Clear();
                        part = (TheatreCMS.Enum.PositionEnum)position;
                        parts = Model.Parts.Where(x => x.Type == part).ToList();
                        if (parts != null && parts.Any())
                        {
                            <li class="list-group-item">
                                @(part)s
                                <dl>
                                    @foreach (var item in parts)
                                    {
                                        if (item != null)
                                        {
                                            <dd class="col">
                                                <a href="/Part/Details/@item.PartID">@Html.Raw(@item.Character)</a>
                                            </dd>
                                        }
                                    }
                                </dl>
                            </li>
                        }
                    }
                </ul>
            </div>
        <!-- End Parts Card Section-->
        </div>

 <div class="card bg-info mr-4 d-md-none" id="cardss">
                        <!-- when screen size is md or bigger this will not display. So when screen size is sm/mobile view it will be visible but otherwise hidden -->
                        <div class="card-header" id="head">
                            <b>Parts</b>
                        </div>
                        <ul class="list-group list-group-flush text-black-50">
                            @{var part1 = new TheatreCMS.Enum.PositionEnum();}
                            @{List<TheatreCMS.Models.Part> parts1 = new List<TheatreCMS.Models.Part>();}
                            @foreach (int position in ViewBag.Positions)
                            {
                                parts1.Clear();
                                part1 = (TheatreCMS.Enum.PositionEnum)position;
                                parts1 = Model.Parts.Where(x => x.Type == part1).ToList();
                                if (parts1 != null && parts1.Any())
                                {
                                    <li class="list-group-item">
                                        @(part1)s
                                        <dl>
                                            @foreach (var item in parts1)
                                            {
                                                if (item != null)
                                                {
                                                    <dd class="col">
                                                        <a href="/Part/Details/@item.PartID">@Html.Raw(@item.Character)</a>
                                                    </dd>
                                                }
                                            }
                                        </dl>
                                    </li>
                                }
                            }
                        </ul>
                    </div>
		</div>
	</div>


ProductionController.cs:

  public ActionResult Details(int? id)
        {

            AdminSettings adminSettings = AdminSettingsReader.CurrentSettings();

            if (id == null)
            {
                id = adminSettings.onstage;
            }
            Production production = db.Productions.Find(id);
            if (production == null)
            {
                return HttpNotFound();
            }
            List<int> positions = new List<int>(){0,1,3,2,4};
            ViewBag.Positions = positions;
            return View(production);
        }